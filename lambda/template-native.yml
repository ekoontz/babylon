AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Menard lambda functions using using the `holy-lambda` micro library"
Parameters:
  Runtime:
    Type: String
    Default: provided
  Timeout:
    Type: Number
    Default: 40
  MemorySize:
    Type: Number
    Default: 2000
Globals:
  Function:
    Runtime: !Ref 'Runtime'
    Timeout: !Ref 'Timeout'
    MemorySize: !Ref 'MemorySize'
Resources:
  GenerateNL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.core.GenerateNL
      CodeUri: s3://menard-lambda/menard.zip
      FunctionName: MenardGenerateNL
      AutoPublishAlias: live
      Events:
        Event:
          Type: Api
          Properties:
            Path: /generate
            Method: get
  GenerateWithAltsNL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.core.GenerateWithAltsNL
      CodeUri: s3://menard-lambda/menard.zip
      FunctionName: MenardGenerateNLWithAlts
      Events:
        Event:
          Type: Api
          Properties:
            Path: /generate-with-alts
            Method: get
  ParseNL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.core.ParseNL
      CodeUri: s3://menard-lambda/menard.zip
      FunctionName: MenardParseNL
      Events:
        Event:
          Type: Api
          Properties:
            Path: /parse
            Method: get
      AutoPublishAlias: live
      Policies:
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource: '*'
      DeploymentPreference:
          Type: Linear10PercentEvery1Minute
          Hooks:
            PreTraffic: !Ref beforeAllowTraffic
            PostTraffic: !Ref afterAllowTraffic
  beforeAllowTraffic:
    Type: AWS::Serverless::Function
    Properties:
      Handler: beforeAllowTraffic.handler
      CodeUri: s3://menard-lambda/menard.zip
      Policies:
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource: !Ref ParseNL.Version
      Runtime: !Ref 'Runtime'
      FunctionName: 'CodeDeployHook_beforeAllowTraffic'
      DeploymentPreference:
        Enabled: false
      Timeout: 5
      Environment:
        Variables:
          NewVersion: !Ref ParseNL.Version
  afterAllowTraffic:
    Type: AWS::Serverless::Function
    Properties:
      Handler: afterAllowTraffic.handler
      CodeUri: s3://menard-lambda/menard.zip
      Policies:
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource: !Ref ParseNL.Version
      Runtime: !Ref 'Runtime'
      FunctionName: 'CodeDeployHook_afterAllowTraffic'
      DeploymentPreference:
        Enabled: false
      Timeout: 5
      Environment:
        Variables:
          NewVersion: !Ref ParseNL.Version
