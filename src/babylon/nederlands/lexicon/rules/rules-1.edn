[{:rule :dont-inflect-pronouns
  :if {:cat :noun
       :pronoun true}
  :then [{:inflected? true
          :subcat []}]}
 {:rule :dont-inflect-propernouns
  :if {:cat :noun
       :propernoun true}
  :then [{:inflected? true
          :subcat []}]}

 {:rule :subject-verb-agreement
  :if {:cat :verb}
  :then
  (let [agr (atom :top)
        subj (atom :top)]
    [{:sem {:subj subj}
      :agr agr
      :subcat {:1 {:cat :noun
                   :case :nom
                   :sem subj
                   :agr agr}}}])}

 {:rule :propernouns-are-3rd-person-singular
  :if {:cat :noun
       :pronoun false
       :propernoun true}
  :then [{:agr {:number :sing
                :person :3rd}}]}

 ;; generate transitive, non-reflexive and intransitive versions:
 {:rule :transitivize
  :if {:cat :verb
       :modal false
       :reflexive ::unspec
       :subcat {:2 ::unspec}}
  :then (let [obj-sem (atom :top)]
          [{:sem {:obj obj-sem}
            :modal false
            :reflexive false
            :subcat {:2 {:cat :noun
                         :subcat []
                         :sem obj-sem}}}
           {:sem {:obj :unspec}
            :modal false            
            :subcat {:2 []}}])}]

