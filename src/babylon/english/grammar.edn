[{:rule "comp1" ;; 'that I see'; 'that sees me'
  :head {:cat :comp
         :phrasal false}
  :unify [babylon.ug/head-first
          babylon.ug/head-is-root
          babylon.ug/slash-is-head-slash
          babylon.ug/subcat-1-1-comp-subcat]}

 {:rule "comp2" ;; 'that you will see a cat'
  :head {:cat :comp
         :phrasal false}
  :comp {:phrasal true}
  :unify [babylon.ug/head-first
          babylon.ug/head-is-root
          babylon.ug/subcat-1]}
 
 {:rule "intensifier" ;; 'very small'
  :cat :adjective
  :head {:cat :intensifier}
  :comp {:cat :adjective}
  :unify [babylon.ug/head-comp-rule
          babylon.ug/head-first-1
          babylon.ug/subcat-1]}
 
 {:rule "infinitive" ;; 'to sleep','to see the cat', 'to try to sleep', 'to try to see the cat'
  :cat :verb
  :modal :infinitive
  :head {:cat :particle
         :phrasal false
         :infl :infinitive}
  :options [{:modal false}
            {:modal :infinitive}]
  :unify [babylon.ug/comp-is-root
          babylon.ug/head-first-1
          babylon.ug/head-infl
          babylon.ug/head-modal
          babylon.ug/head-sem
          babylon.ug/subcat-1-1-comp-subcat]}
 
 {:rule "nbar" ;; '[nbar .black +cat]'
  :cat :noun
  :head {:pronoun false
         :propernoun false
         :subcat {:1 {:top :top}
                  :2 []}}
  :slash false
  :comp {:cat :adjective}
  :unify [babylon.ug/head-last
          babylon.ug/head-is-root
          babylon.ug/nominal-phrase
          babylon.ug/sem-mod
          babylon.ug/subcat-1-1]}

 {:rule "nbar2" ;; '[nbar2 +cat .[s-slash I see]]'
  :slash false
  :cat :noun
  :head {:phrasal false
         :pronoun false
         :propernoun false}

  :comp {:rule "s-slash"
         :phrasal true
         :cat :verb
         :slash true}
  :unify [babylon.ug/head-first
          babylon.ug/head-is-root
          babylon.ug/nominal-phrase
          babylon.ug/object-of-comp-is-head
          babylon.ug/sem-mod
          babylon.ug/subcat-1-1]}
 
 {:rule "nbar3" ;; '[nbar3 cat [comp1 that [vp-present sees me]]]'
  :slash false
  :cat :noun
  :head {:phrasal false
         :pronoun false
         :propernoun false}
  :comp {:phrasal true
         :cat :comp
         :slash false}
  :unify [babylon.ug/head-first
          babylon.ug/head-rule
          babylon.ug/head-is-root
          babylon.ug/nominal-phrase
          babylon.ug/sem-mod
          babylon.ug/subcat-1-1
          babylon.ug/subject-of-comp-is-head]}

 {:rule "nbar4" ;; '[np [nbar4 cat [comp1 that [s-slash I see]]]]'
  :slash false
  :cat :noun
  :head {:phrasal false
         :pronoun false
         :propernoun false}
  :comp {:phrasal true
         :cat :comp
         :slash true}
  :unify [babylon.ug/head-first
          babylon.ug/head-rule
          babylon.ug/head-is-root
          babylon.ug/nominal-phrase
          babylon.ug/object-of-comp-is-head
          babylon.ug/sem-mod
          babylon.ug/subcat-1-1]}

 {:rule "negp"
  :options [{:infl :base}
            {:infl :gerund}
            {:infl :infinitive}
            {:infl :past-participle}]
  :cat :verb
  :head {:cat :neg}
  :unify [babylon.ug/comp-is-root
          babylon.ug/head-comp-rule
          babylon.ug/head-first-1
          babylon.ug/head-infl
          babylon.ug/head-sem
          babylon.ug/raise-the-comp-subcat
          babylon.ug/slash-is-head-slash]}
 
 {:rule "np"
  :reflexive false
  :agr {:person :3rd}
  :cat :noun
  :slash false
  :comp {:phrasal false}
  :unify [babylon.ug/head-last
          babylon.ug/head-is-root
          babylon.ug/subcat-1]}

 {:rule "pp"
  :cat :prep
  :subcat []
  :unify [babylon.ug/head-first
          babylon.ug/head-is-root
          babylon.ug/subcat-1]}

 {:rule "s" ;; [s(:present-simple) .she +sleeps]
  :sem {:mood :decl}
  :comp {:interogative? false}
  :cat :verb
  :slash false
  :options babylon.english/finite-tenses
  :unify [babylon.ug/comp-mod-is-subj-mod
          babylon.ug/head-last
          babylon.ug/head-is-root
          babylon.ug/head-modal
          babylon.ug/subcat-1]}
 
 {:rule "s-comp" ;; [s-comp .she +sleep]] in [s-interog +did .[s-comp .she +sleep]]
  :cat :verb
  :slash false
  :options [{:head {:infl :base}}
            {:head {:infl :gerund}}
            {:head {:infl :past-participle}}]
  
  :unify [babylon.ug/subcat-1
          babylon.ug/head-last
          babylon.ug/comp-is-root]}

 {:rule "s-comp-2"
  ;; [s-comp-2 .[np .the +cat] +eat]
  ;; in: [s-wh-interog .what +[s-interog-slash +did .[s-comp-2 .[np .the +cat] +eat]]]
  :cat :verb
  :sem {:mood :interog}
  :head {:infl :base
         :reflexive false
         :subcat {:1 {:top :top}
                  :2 {:top :top}}}
  :unify [babylon.ug/head-last
          babylon.ug/raise-two-to-one]}
 
 {:rule "s-interog" ;; [s-interog +did .[s-comp .she +sleep]]
  :slash false
  :cat :verb
  :sem {:mood :interog}
  :head {:aux true :phrasal false}
  :unify [babylon.ug/subcat-1
          babylon.ug/comp-is-root
          babylon.ug/head-first]}

 {:rule "s-interog-slash"
  ;; [s-interog-slash +did .[s-comp-2 .she +see]]
  ;; (head of: [s-wh-interog .what +[s-interog-slash did she see]]])
  :sem {:mood :interog}
  :head {:phrasal false
         :cat :verb
         :aux true}
  :comp {:phrasal true}
  :unify [babylon.ug/head-first
          babylon.ug/raise-the-comp-subcat]}
 
 {:rule "s-slash" ;; [s-slash .I +see] in: [nbar2 +cat .[s-slash .I +see]
  :slash true
  :comp {:case :nom} ;; TODO: should not be needed; subcat of head should handle it.
  :cat :verb
  :reflexive false
  :options babylon.english/finite-tenses
  :unify [babylon.ug/head-last
          babylon.ug/head-is-root
          babylon.ug/subcat-2-1-slash]}

 {:rule "s-wh-interog" ;; [s-wh-interog .what +[s-interog-slash +did .[s-slash .she +see]]]
  :cat :verb
  :comp {:interogative? true}
  :head {:rule "s-interog-slash"
         :phrasal true}
  :unify [babylon.ug/head-last
          babylon.ug/subcat-1-slash]}
 
 {:rule "vp" ;; [vp +see .it]
  :cat :verb
  :aux false
  :slash false
  :options babylon.english/tenses
  :head {:aux false}
  :unify [babylon.ug/head-first
          babylon.ug/head-reflexive
          babylon.ug/comp-mod-is-obj-mod
          babylon.ug/head-is-root
          babylon.ug/head-modal
          babylon.ug/slash-is-head-slash
          babylon.ug/subcat-2]} 

; {:rule "vp-adjunct" ;; [vp-adjunct +sit .[pp on the table]}
;  :cat :verb
;  :aux false
;  :slash false
;  :options babylon.english/tenses
;  :head}
 
 {:rule "vp-ditransitive" ;; [vp [vp-ditransitive +puts .it] [pp +on .[np .the +table]]]
  :sem {:iobj {:top :top}}
  :cat :verb
  :modal false
  :aux false
  :slash false
  :options babylon.english/tenses
  :head {:aux false}
  :unify [babylon.ug/head-first
          babylon.ug/head-reflexive
          babylon.ug/comp-mod-is-obj-mod
          babylon.ug/head-sem
          babylon.ug/head-is-root
          babylon.ug/head-modal
          babylon.ug/slash-is-head-slash
          babylon.ug/subcat-3]} 
 
 {:rule "vp-aux" ;; [vp-aux +will .see]; [vp-aux +will .[vp +see it]]
  :sem {:mood :decl}
  :cat :verb
  :slash false
  :subcat {:1 {:top :top}}
  :aux true
  :options (mapcat (fn [aux-tense]
                     (map #(dag_unify.core/unify % aux-tense)
                          [{:comp {:phrasal true}}
                           {:comp {:phrasal false
                                   :reflexive false}}]))
                   babylon.english/aux-tenses)
  :comp {:cat :verb
         :slash false}
  :head {:slash false
         :phrasal false
         :cat :verb
         :aux true}
  :unify [babylon.ug/head-first
          babylon.ug/comp-is-root
          babylon.ug/head-reflexive
          babylon.ug/subcat-2]}
 
 {:rule "vp-aux-slash" ;; [np .the [nbar2 +cat .[s-slash .she +[vp-aux-slash +will .see]]]]
  :cat :verb
  :slash true
  :aux true
  :options babylon.english/slash-tenses
  :head {:phrasal false
         :aux true}
  :unify [babylon.ug/head-first
          babylon.ug/head-reflexive
          babylon.ug/comp-is-root
          babylon.ug/subcat-2-2-slash]}

 {:rule "vp-modal-1" ;; [vp-modal-1 +wants .[+to .sleep]
  :cat :verb
  :slash false
  :subcat {:1 {:top :top}}
  :aux false
  :modal :infinitive
  :options babylon.english/tenses
  :comp {:cat :verb
         :infl :infinitive
         :phrasal true
         :slash false}
  :head {:slash false
         :phrasal false
         :cat :verb
         :aux false
         :modal :infinitive}
  :unify [babylon.ug/head-first
          babylon.ug/head-is-root
          babylon.ug/subcat-2]}

 {:rule "vp-modal-2" ;; [vp-modal-2 +can .sleep]
  :sem {:mood :decl}
  :cat :verb
  :infl :base
  :slash false
  :subcat {:1 {:top :top}}
  :aux false
  :modal :base
  :options babylon.english/tenses
  :comp {:cat :verb
         :subcat {:2 []} ;; TODO: consider promoting this constraint to ug/subcat-2.
         :infl :base
         :slash false}
  :head {:slash false
         :phrasal false
         :cat :verb
         :aux false
         :modal :base}
  :unify [babylon.ug/head-first
          babylon.ug/head-is-root
          babylon.ug/head-reflexive
          babylon.ug/subcat-2]}
  
 {:rule "vp-slash" ;; [s-wh-interog .[pp +at .what] +[s-interog-slash +did [s-comp-2 .she +[vp-slash +look .at]]]]
;;  :options [] ;; TODO: options: infl base,present participle, past participle
  :sem {:mood :interog}
  :head {:cat :verb
         :infl :base  ;; TODO: use options (see above TODO comment)
         :subcat {:2 {:cat :prep}}}
  :unify [babylon.ug/head-first
          babylon.ug/vp-slash]}]

;; TODO {:rule "vp-modal-slash"}] ;; [nbar +book .[s-slash .she +[vp-modal-slash +wants .[+to .find]]]]

