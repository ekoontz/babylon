[{:rule :irregular-common-noun
  :if {:cat :noun
       :pronoun ::unspec
       :propernoun ::unspec
       :regular false}
  :then [{:pronoun false
          :regular false
          :propernoun false}]}

 {:rule :subject-verb-agreement
  :if {:cat :verb
       :subcat {:1 {:cat :noun}}}
  :then [(let [agr (atom :top)]
           {:agr agr
            :subcat {:1 {:agr agr
                         :cat :noun
                         :case :nom}}})]}
 {:rule :aux-verbs
  :if {:cat :verb
       :aux true
       :subcat {:2 {:cat :verb}}}
  :then (let [agr (atom :top)
              reflexive (atom :top)
              sem (atom :top)
              subject (atom {:agr agr
                             :cat :noun
                             :subcat []})]
          [{:agr agr
            :cat :verb
            :reflexive reflexive
            :sem sem
            :subcat {:1 subject
                     :2 {:agr agr
                         :aux false
                         :cat :verb
                         :reflexive reflexive
                         :sem sem
                         :subcat {:1 subject}}}}])}
 
 {:rule :dont-inflect-pronouns
  :if {:cat :noun
       :pronoun true}
  :then [{:inflected? true}]}

 {:rule :dont-inflect-propernouns
  :if {:cat :noun
       :propernoun true}
  :then [{:inflected? true}]}

 {:rule :modal-infinitive
  :if {:cat :verb
       :modal :infinitive}
  :then [{:sem {:obj :unspec}
          :reflexive false
          :subcat {:2 []}}
         (let [subj (atom :top)
               subcat-subj (atom {:sem subj})
               obj (atom {:subj subj})]
           {:reflexive false
            :sem {:subj subj
                  :obj obj}
            :subcat {:2 {:infl :infinitive
                         :cat :verb
                         :reflexive false
                         :sem obj
                         :subcat {:1 subcat-subj
                                  :2 []}}}})
         (let [subj (atom :top)
               agr (atom :top)
               subcat-subj (atom {:agr agr
                                  :sem subj})
               obj (atom {:subj subj})]
           {:reflexive true
            :agr agr
            :sem {:subj subj
                  :obj obj}
            :subcat {:2 {:infl :infinitive
                         :agr agr
                         :cat :verb
                         :reflexive true
                         :sem obj
                         :subcat {:1 subcat-subj
                                  :2 []}}}})]}
 
 ;; TODO: move reflexive and agreement stuff to rules-2.edn so that
 ;; modal-base is simpler and clearer.
 {:rule :modal-base
  :if {:cat :verb
       :modal :base}
  :then (let [agr (atom :top)
              subj (atom :top)
              subcat-subj (atom {:sem subj})
              obj (atom {:subj subj})]
          [;; "I can"
           {:marker 1
            :sem {:obj :unspec}
            :infl :base
            :subcat {:2 []}} ;; "can"

           ;;  "can <vp[base,nonmodal]>" non-reflexive
           {:marker 2
            :sem {:subj subj
                  :obj obj}
            :infl :base
            :reflexive false
            :subcat {:2 {:aux false
                         :infl :base
                         :cat :verb
                         :modal false
                         :reflexive false
                         :sem obj
                         :subcat {:1 subcat-subj}}}}

           ;;  "can <vp[base,nonmodal]>" reflexive
           {:marker 3
            :agr agr
            :sem {:subj subj
                  :obj obj}
            :infl :base
            :reflexive true
            :subcat {:1 {:agr agr}
                     :2 {:aux false
                         :agr agr
                         :infl :base
                         :modal false
                         :cat :verb
                         :reflexive true
                         :sem obj
                         :subcat {:1 subcat-subj}}}}

           ;;  "can <vp[base,infinitive modal]>" non-reflexive
           {:marker 2
            :sem {:subj subj
                  :obj obj}
            :infl :base
            :reflexive false
            :subcat {:2 {:aux false
                         :infl :base
                         :cat :verb
                         :modal :infinitive
                         :reflexive false
                         :sem obj
                         :subcat {:1 subcat-subj}}}}

           ;;  "can <vp[base,infinitive modal]>" reflexive
           {:marker 3
            :agr agr
            :sem {:subj subj
                  :obj obj}
            :infl :base
            :reflexive true
            :subcat {:1 {:agr agr}
                     :2 {:aux false
                         :agr agr
                         :infl :base
                         :modal :infinitive
                         :cat :verb
                         :reflexive true
                         :sem obj
                         :subcat {:1 subcat-subj}}}}])}

 
 ;; used to prevent rules-2.edn's transitive-verbs-prep-2 from applying.
 {:rule :transitive-verb-prep-default-false
  :if {:cat :verb
       :transitive-prep ::unspec}
  :then [{:transitive-prep false}]}]
