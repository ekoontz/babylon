[{:rule :irregular-common-noun
  :if {:cat :noun
       :pronoun ::unspec
       :propernoun ::unspec
       :regular false}
  :then [{:pronoun false
          :regular false
          :propernoun false}]}

 {:rule :subject-verb-agreement
  :if {:cat :verb
       :subcat {:1 {:cat :noun}}}
  :then [(let [agr (atom :top)
               subj (atom :top)]
           {:agr agr
            :sem {:subj subj}
            :subcat {:1 {:agr agr
                         :cat :noun
                         :case :nom
                         :sem subj
                         :subcat []}}})]}
 
 {:rule :dont-inflect-pronouns
  :if {:cat :noun
       :pronoun true}
  :then [{:inflected? true}]}

 {:rule :dont-inflect-propernouns
  :if {:cat :noun
       :propernoun true}
  :then [{:inflected? true}]}

 ;; TODO: move reflexive and agreement stuff to rules-2.edn so that
 ;; modal-infinitive is simpler and clearer.
 {:rule :modal-infinitive
  :if {:cat :verb
       :modal :infinitive}
  :then [;; intransitive: "she tries"
         {:sem {:obj :unspec}
          :reflexive false
          :subcat {:2 []}}

         ;; transitive and non-reflexive: "she tries to see it"
         (let [subj (atom :top)
               obj (atom {:subj subj})]
           {:reflexive false
            :sem {:subj subj
                  :obj obj}
            :subcat {:2 {:infl :infinitive
                         :cat :verb
                         :phrasal true
                         :reflexive false
                         :sem obj
                         :subcat {:1 {:sem subj}
                                  :2 []}}}})

         ;; transitive and reflexive: "she tries to see herself"
         (let [subj-ref (atom :top)
               subj (atom {:ref subj-ref})
               obj (atom {:subj subj
                          :obj {:ref subj-ref}})
               agr (atom :top)]
           {:reflexive true
            :agr agr
            :sem {:subj subj
                  :obj obj}
            :subcat {:2 {:agr agr
                         :infl :infinitive
                         :phrasal true
                         :cat :verb
                         :reflexive true
                         :sem obj
                         :subcat {:1 {:sem subj}
                                  :2 []}}}})]}
 
 ;; TODO: move reflexive and agreement stuff to rules-2.edn so that
 ;; modal-base is simpler and clearer.
 {:rule :modal-base
  :if {:cat :verb
       :modal :base}
  :then (let [agr (atom :top)
              subj (atom :top)
              subcat-subj (atom {:sem subj})
              obj (atom {:subj subj})]
          [;; "I can"
           {:derivation {:1 {:modal-base {:marker 1}}}
            :sem {:obj :unspec}
            :subcat {:2 []}} ;; "can"

           ;;  "can <vp[base,nonmodal]>" non-reflexive
           {:derivation {:1 {:modal-base {:marker 2}}}
            :sem {:subj subj
                  :obj obj}
            :reflexive false
            :subcat {:2 {:aux false
                         :infl :base
                         :cat :verb
                         :modal false
                         :reflexive false
                         :sem obj
                         :subcat {:1 subcat-subj}}}}

           ;;  "can <vp[base,nonmodal]>" reflexive
           {:derivation {:1 {:modal-base {:marker 3}}}
            :agr agr
            :sem {:subj subj
                  :obj obj}
            :reflexive true
            :subcat {:1 {:agr agr}
                     :2 {:aux false
                         :agr agr
                         :infl :base
                         :modal false
                         :cat :verb
                         :reflexive true
                         :sem obj
                         :subcat {:1 subcat-subj}}}}

           ;;  "can <vp[base,infinitive modal]>" non-reflexive
           {:derivation {:1 {:modal-base {:marker 2}}}
            :sem {:subj subj
                  :obj obj}
            :reflexive false
            :subcat {:2 {:aux false
                         :infl :base
                         :cat :verb
                         :modal :infinitive
                         :reflexive false
                         :sem obj
                         :subcat {:1 subcat-subj}}}}

           ;;  "can <vp[base,infinitive modal]>" reflexive
           {:derivation {:1 {:modal-base {:marker 3}}}
            :agr agr
            :sem {:subj subj
                  :obj obj}
            :reflexive true
            :subcat {:1 {:agr agr}
                     :2 {:aux false
                         :agr agr
                         :infl :base
                         :modal :infinitive
                         :cat :verb
                         :reflexive true
                         :sem obj
                         :subcat {:1 subcat-subj}}}}])}
 {:rule :aux-verbs
  :if {:cat :verb
       :aux true
       :subcat {:1 {:cat :noun}}}
  :then (let [agr (atom :top)
              subject (atom {:agr agr
                             :cat :noun
                             :subcat []})]
          [{:agr agr
            :subcat {:1 subject}}])}

 {:rule :ditransitive-false
  :if {:cat :verb
       :normal-transitive-defaults? true
       :subcat {:3 ::unspec}}
  :then [{:cat :verb
          :subcat {:3 []}}]}]
