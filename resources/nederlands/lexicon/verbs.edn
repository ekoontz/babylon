{
 "bereiken" [{ :sem {:pred :achieve}}]
 "bestrijden" [{:sem {:pred :overcome}}]
 "bruizen" [{:sem {:pred :bubble}}]
 "gaan" [{:curriculum 1
          :sem {:pred :go}
          :exceptions [{:infl :past-simple
                        :agr {:number :sing}
                        :surface "ging"}
                       {:infl :past-simple
                        :agr {:number :plur}
                        :surface "gingen"}]}]
          
 "hopen" [{:sem {:pred :hope}
           :exceptions [{:infl :past-simple
                         :agr {:number :sing}
                         :surface "hoopte"}
                        {:infl :past-simple
                         :agr {:number :plur}
                         :surface "hoopten"}]}]

 "kijken"
 (let [exceptions [{:infl :past-simple
                    :agr {:number :sing}
                    :surface "keek"}
                   {:infl :past-simple
                    :agr {:number :sing}
                    :surface "keken"}]]
   [{:curriculum 1
     :sem {:pred :look}
     :exceptions exceptions}])
                   
 "komen"
 (let [exceptions [{:infl :past-simple
                    :agr {:number :sing}
                    :surface "kwam"}
                   {:infl :past-simple
                    :agr {:number :plur}
                    :surface "kwamen"}]]
   [{:curriculum 1
     :sem {:pred :come}
     :subcat {:2 []}
     :exceptions exceptions}])

 "kunnen" ;; F. 40.1
 (let [exceptions [{:infl :present
                    :agr {:person :1st :number :sing}
                    :surface "kan"}

                   {:infl :present
                    :subj {:ref {:context :informal}}
                    :agr {:person :2nd :number :sing}
                    :surface "kunt"}

                   {:infl :present
                    :subj {:ref {:context :informal}}
                    :agr {:person :2nd :number :sing}
                    :surface "kan"}

                   {:infl :present
                    :subj {:ref {:context :polite}}
                    :agr {:person :2nd :number :sing}
                    :surface "kunt"}
                   
                    {:infl :present
                     :agr {:person :3rd :number :sing}
                     :surface "kan"}

                   {:infl :past-simple
                    :agr {:number :sing}
                    :surface "kon"}
                   {:infl :past-simple
                    :agr {:number :plur}
                    :surface "konden"}]]
   [{:curriculum 1
     :modal :infinitive
     :sem {:pred :be-able-to}
     :exceptions exceptions}])
 
 "lezen"
 (let [exceptions [{:infl :present
                    :agr {:person :1st :number :sing}
                    :surface "lees"}
                   {:infl :present
                    :agr {:person :2nd :number :sing}
                    :surface "leest"}
                   {:infl :present
                    :agr {:person :3rd :number :sing}
                    :surface "leest"}
                   {:infl :past-simple
                    :agr {:number :sing}
                    :surface "las"}
                   {:infl :past-simple
                    :agr {:number :plur}
                    :surface "lazen"}]]
   [{:curriculum 1
     :exceptions exceptions
     :sem {:pred :read}}])

 "moeten" ;; F. 40.1
 (let [exceptions [{:infl :present
                    :agr {:number :sing}
                    :surface "moet"}

                   {:infl :present
                    :agr {:number :plur}
                    :surface "moeten"}]]

   [{:curriculum 1
     :exceptions exceptions
     :modal :infinitive
     :sem {:pred :must}}])

 "ontworpen" [{:sem {:pred :design}}]
 "optreden" [{ :sem {:pred :perform}}]
 
 "proberen"
 (let [exceptions [{:infl :present
                    :agr {:person :1st :number :sing}
                    :surface "probeer"}
                   {:infl :present
                    :agr {:person :2nd :number :sing}
                    :surface "probeert"}
                   {:infl :present
                    :agr {:person :3rd :number :sing}
                    :surface "probeert"}]]
   [{:curriculum 1
     :modal :te
     :sem {:pred :try}
     :exceptions exceptions}])
 
 "slapen"
 (let [exceptions [{:infl :present
                    :agr {:person :3rd :number :sing}
                    :surface "slaapt"}]]
   [{:curriculum 1
     :exceptions exceptions
    
     :sem {:pred :sleep
           :subj {:prop {:animate true}}} ;; TODO: move to encyclopedia.

    :subcat {:2 []}}])

 "te"
 [(let [sem (atom :top)
        reflexive? (atom :top)]
    {:infl :te
     :inflected? true
     :normal-transitive-defaults? false
     :reflexive reflexive?
     :sem sem
     :subcat {:1 {:cat :verb
                  :modal false
                  :reflexive reflexive?
                  :subcat {:1 {:cat :noun}} ;; prevent "[vp:inf te te]"
                  :infl :infinitive
                  :sem sem}
              :2 []}})]

 "tegengehouden" [{ :sem {:pred :inhibit}}]
 "uitgeleggen" [{ :sem {:pred :explain}}]
 "uitwijken" [{:sem {:pred :emigrate}}]
 "werken" [{:curriculum 1
            :sem {:pred :work}
            :subcat {:2 []}}]

 "veroorzaaken" [{:sem {:pred :cause}}]

 "verpesten" [{:sem {:pred :ruin}
               :subcat {:2 {:cat :noun}}}]
 
 "voeren" [{:sem {:pred :feed}}]

 "voorkomen" [{:sem {:pred :prevent}}
              {:sem {:pred :avoid}}]

 "zeggen"
 (let [exceptions [{:infl :past-simple
                    :agr {:number :sing}                    
                    :surface "zei"}
                   {:infl :past-simple
                    :agr {:number :plur}
                    :surface "zeiden"}]]
   [{:curriculum 1
     :exceptions exceptions
     :sem {:pred :say}}])
 
 "zien"
 (let [exceptions [{:infl :present
                    :agr {:person :1st :number :sing}
                    :surface "zie"}
                   {:infl :present
                    :agr {:person :2nd :number :sing}
                    :surface "ziet"}
                   {:infl :present
                    :agr {:person :3rd :number :sing}
                    :surface "ziet"}
                   {:infl :past-simple
                    :agr {:number :sing}                    
                    :surface "zag"}
                   {:infl :past-simple
                    :agr {:number :plur}
                    :surface "zagen"}]]
   [{:curriculum 1
     :exceptions exceptions
     :sem {:pred :see}}])

 "zingen"
 [{:curriculum 1
   :sem {:pred :sing}
   :subcat {:2 []}
   :exceptions [{:infl :past-simple
                 :agr {:number :sing}
                 :surface "zong"}
                {:infl :past-simple
                 :agr {:number :plur}
                 :surface "zongen"}]}]}


